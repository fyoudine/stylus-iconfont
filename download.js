// Generated by CoffeeScript 1.12.3
var FontAwesome, ProgressBar, Q, fs, http, mkdirp, svgfont2svgicons, yaml;

svgfont2svgicons = require('svgfont2svgicons');

yaml = require('js-yaml');

fs = require('fs');

http = require('https');

ProgressBar = require('progress');

Q = require('q');

mkdirp = require('mkdirp');

FontAwesome = function(outputDir) {
  var deferred, iconProvider, iconsYAMLUrl, namesObject, requestFont, svgFontUrl;
  deferred = Q.defer();
  iconProvider = svgfont2svgicons();
  iconsYAMLUrl = "https://raw.githubusercontent.com/FortAwesome/Font-Awesome/master/src/icons.yml";
  svgFontUrl = "https://raw.githubusercontent.com/FortAwesome/Font-Awesome/master/fonts/fontawesome-webfont.svg";
  mkdirp(outputDir);
  namesObject = [];
  iconProvider.on('end', function() {
    return setTimeout(function() {
      return deferred.resolve();
    }, 1000);
  });
  iconProvider.on('readable', function() {
    var i, icon, iconUnicode, item, len, name;
    icon = iconProvider.read();
    if (icon) {
      iconUnicode = icon.codepoint.charCodeAt(0).toString(16);
      name = "";
      for (i = 0, len = namesObject.length; i < len; i++) {
        item = namesObject[i];
        if (item.unicode === iconUnicode) {
          name = item.id;
          break;
        }
      }
      if (name) {
        return icon.stream.pipe(fs.createWriteStream(outputDir + "/" + name + ".svg"));
      }
    }
  });
  requestFont = function() {
    return http.get(svgFontUrl, function(response) {
      var bar;
      bar = new ProgressBar('[icon-font]: [:bar] :percent :etas Font-Awesome SVG extracting', {
        complete: '=',
        incomplete: ' ',
        width: 25,
        total: parseInt(response.headers['content-length'])
      });
      response.pipe(iconProvider);
      return response.on('data', function(chunk) {
        return bar.tick(chunk.length);
      });
    });
  };
  http.get(iconsYAMLUrl, function(response) {
    var bar, str;
    str = "";
    bar = new ProgressBar('[icon-font]: [:bar] :percent :etas Downloading Font-Awesome name file', {
      complete: '=',
      incomplete: ' ',
      width: 25,
      total: parseInt(response.headers['content-length'])
    });
    response.on('data', function(chunk) {
      str += chunk;
      return bar.tick(chunk.length);
    });
    response.on('end', function() {
      namesObject = (yaml.load(str)).icons;
      return requestFont();
    });
  });
  return deferred.promise;
};

module.exports = function(prefix, outputDir) {
  switch (prefix) {
    case 'fa':
      return FontAwesome(outputDir);
  }
};
